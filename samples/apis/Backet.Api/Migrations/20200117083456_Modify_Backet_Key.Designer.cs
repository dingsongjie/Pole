// <auto-generated />
using Backet.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Backet.Api.Migrations
{
    [DbContext(typeof(BacketDbContext))]
    [Migration("20200117083456_Modify_Backet_Key")]
    partial class Modify_Backet_Key
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Backet.Api.Domain.AggregatesModel.BacketAggregate.Backet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Backet");
                });

            modelBuilder.Entity("Backet.Api.Domain.AggregatesModel.BacketAggregate.BacketItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("BacketId")
                        .HasColumnType("character varying(32)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductId")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("BacketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BacketItem");
                });

            modelBuilder.Entity("Backet.Api.Domain.AggregatesModel.BacketAggregate.BacketItem", b =>
                {
                    b.HasOne("Backet.Api.Domain.AggregatesModel.BacketAggregate.Backet", null)
                        .WithMany("BacketItems")
                        .HasForeignKey("BacketId");
                });
#pragma warning restore 612, 618
        }
    }
}
